version: '3.8'

services:
  mqtt-broker:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - monitoring-network

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-monitoring}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-monitoring123}
      POSTGRES_DB: ${POSTGRES_DB:-monitoring_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER:-monitoring}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-monitoring123}
      - DB_NAME=${POSTGRES_DB:-monitoring_db}
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
    depends_on:
      - postgres
      - mqtt-broker
    networks:
      - monitoring-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres
    networks:
      - monitoring-network

  simulador:
    build:
      context: ./simulador
      dockerfile: Dockerfile
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
    depends_on:
      - mqtt-broker
    networks:
      - monitoring-network

networks:
  monitoring-network:
    driver: bridge

volumes:
  postgres_data:
  grafana_data: 